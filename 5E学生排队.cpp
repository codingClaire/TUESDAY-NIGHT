/*E: 学生排队
描述
 
体育老师小明要将自己班上的学生按顺序排队。他首先让学生按学号从小到大的顺序排成一排，学号小的排在前面，然后进行多次调整。一次调整小明可能让一位同学出队，向前或者向后移动一段距离后再插入队列。
例如，下面给出了一组移动的例子，例子中学生的人数为8人。
0）初始队列中学生的学号依次为1, 2, 3, 4, 5, 6, 7, 8；
1）第一次调整，命令为“3号同学向后移动2”，表示3号同学出队，向后移动2名同学的距离，再插入到队列中，新队列中学生的学号依次为1, 2, 4, 5, 3, 6, 7, 8；
2）第二次调整，命令为“8号同学向前移动3”，表示8号同学出队，向前移动3名同学的距离，再插入到队列中，新队列中学生的学号依次为1, 2, 4, 5, 8, 3, 6, 7；
3）第三次调整，命令为“3号同学向前移动2”，表示3号同学出队，向前移动2名同学的距离，再插入到队列中，新队列中学生的学号依次为1, 2, 4, 3, 5, 8, 6, 7。
小明记录了所有调整的过程，请问，最终从前向后所有学生的学号依次是多少？
请特别注意，上述移动过程中所涉及的号码指的是学号，而不是在队伍中的位置。在向后移动时，移动的距离不超过对应同学后面的人数，如果向后移动的距离正好等于对应同学后面的人数则该同学会移动到队列的最后面。在向前移动时，移动的距离不超过对应同学前面的人数，如果向前移动的距离正好等于对应同学前面的人数则该同学会移动到队列的最前面。
 
输入
 
输入的第一行包含一个整数n，表示学生的数量，学生的学号由1到n编号。
第二行包含一个整数m，表示调整的次数。
接下来m行，每行两个整数p, q，如果q为正，表示学号为p的同学向后移动q，如果q为负，表示学号为p的同学向前移动-q。
 
输出
 
输出一行，包含n个整数，相邻两个整数之间由一个空格分隔，表示最终从前向后所有学生的学号。
 
样例
 
输入
输出
8
3
3 2
8 -3
3 -2
1 2 4 3 5 8 6 7
 
 
提示
 
对于所有评测用例，1 ≤ n ≤ 1000，1 ≤ m ≤ 1000，所有移动均合法。 */

#include<iostream>
using namespace std;

int main()
{
	int n,i;
	cin>>n;
	int a[n];
	for(i=0;i<n;i++)
	{
		a[i]=i+1;
	}
    int m,j;
    cin>>m; 
    for(j=0;j<m;j++)
    {
    	int p,q;
    	cin>>p>>q;
    	//a[p]向前或后跨过q个再插入
		for(i=0;i<n;i++)
		{
			if(a[i]==p)
			{
			  p=i;
			  break;	
			}
		 } //p现在存的是对应的数的下标 
		 //cout<<p<<endl;
    	if(q>0)
		{
		   int b[n]={0};
		   for(i=0;i<p;i++)
		   	 b[i]=a[i];
		   for(i=p;i<p+q;i++)
		      b[i]=a[i+1];
		   b[p+q]=a[p];
		   for(i=p+q+1;i<n;i++)
		      b[i]=a[i];
		      
		   for(i=0;i<n;i++)
		    a[i]=b[i];
		}
		else
		{
			q=0-q;
			int b[n]={0};
			for(i=0;i<=p-q-1;i++)
			  b[i]=a[i];
			b[p-q]=a[p];
			for(i=p-q+1;i<=p;i++)
				b[i]=a[i-1];
			for(i=p+1;i<n;i++)
				b[i]=a[i];
				
			 for(i=0;i<n;i++)
		      a[i]=b[i];
		}
	}for(i=0;i<n-1;i++)
	   cout<<a[i]<<" ";
	 cout<<a[n-1]<<endl;	
return 0;	
 } 
